name: Cilium Test

# Any change in triggers needs to be reflected in the concurrency group.
on:
  push:
    branches:
      - pr/aanm-test-test-test

# By specifying the access of one of the scopes, all of those that are not
# specified are set to 'none'.
permissions:
  # To be able to access the repository with actions/checkout
  contents: read
  # To allow retrieving information from the PR API
  pull-requests: read
  # So that Sibz/github-status-action can write into the status API
  statuses: write

env:
  check_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  check_changes:
    name: Deduce required tests from code changes
    runs-on: ubuntu-latest
    outputs:
      tested: ${{ steps.tested-tree.outputs.src }}
      sha: e4cf16a127ef023aeec941e270bb36297978efe5
    steps:
      # Because we run on issue comments, we need to checkout the code for
      # paths-filter to work.
      - name: Checkout code
        if: ${{ github.event.issue.pull_request }}
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          persist-credentials: false
      - name: Retrieve pull request's base and head
        id: sha
        run: |
          if [ ${{ github.event.issue.pull_request || github.event.pull_request }} ]; then
            curl ${{ github.event.issue.pull_request.url }} > pr.json
            echo "base=$(jq -r '.base.sha' pr.json)" >> $GITHUB_OUTPUT
            echo "head=$(jq -r '.head.sha' pr.json)" >> $GITHUB_OUTPUT
            echo "sha=$(jq -r '.head.sha' pr.json)" >> $GITHUB_OUTPUT
          else
            echo "sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi
      - name: Check code changes
        if: ${{ github.event.issue.pull_request }}
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: tested-tree
        with:
          base: ${{ steps.sha.outputs.base }}
          ref: ${{ steps.sha.outputs.head }}
          filters: |
            src:
              - '!(Documentation)/**'

  skip-test-run:
    # If the modified files are not relevant for this test then we can skip
    # this test and mark it as successful.
    if: github.event.comment.body == '/test' && needs.check_changes.outputs.tested == 'false'
    runs-on: ubuntu-latest
    needs: check_changes
    name: Set commit status to success (skipped)
    steps:
      - name: Set commit status to success
        uses: Sibz/github-status-action@650dd1a882a76dbbbc4576fb5974b8d22f29847f # v1.1.6
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ needs.check_changes.outputs.sha }}
          context: ${{ github.workflow }}
          description: Ginkgo test skipped
          state: success
          target_url: ${{ env.check_url }}

  # Pre-build the ginkgo binary so that we don't have to build it for all
  # runners.
  build-ginkgo-binary:
    needs: check_changes
    runs-on: ubuntu-latest
    name: Build Ginkgo E2E
    timeout-minutes: 30
    steps:
      - name: Set commit status to pending
        uses: Sibz/github-status-action@650dd1a882a76dbbbc4576fb5974b8d22f29847f # v1.1.6
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ needs.check_changes.outputs.sha }}
          context: ${{ github.workflow }}
          description: Ginkgo test in progress...
          state: pending
          target_url: ${{ env.check_url }}

      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          ref: ${{ needs.check_changes.outputs.sha }}
          persist-credentials: false

      - name: Set Environment Variables
        uses: ./.github/actions/set-env-variables

      # Load Ginkgo build from GitHub
      - name: Load ginkgo E2E from GH cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        id: cache
        with:
          path: /tmp/.ginkgo-build/
          key: ${{ runner.os }}-ginkgo-e2e-${{ hashFiles('**/*.go') }}

      - name: Install Go
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          # renovate: datasource=golang-version depName=go
          go-version: 1.20.4

      - name: Build Ginkgo
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        shell: bash
        run: |
          go install github.com/onsi/ginkgo/ginkgo@v1.16.5
          mkdir -p /tmp/.ginkgo-build

      - name: Build Test
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        shell: bash
        run: |
          cd test
          /home/runner/go/bin/ginkgo build
          strip test.test
          tar -cz test.test -f test.tgz

      - name: Store Ginkgo Test in GitHub cache path
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        shell: bash
        run: |
          mkdir -p /tmp/.ginkgo-build/
          if [ -f test/test.tgz ]; then
            cp test/test.tgz /tmp/.ginkgo-build/
            echo "file copied"
          fi

      - name: Wait for images to be available
        timeout-minutes: 10
        shell: bash
        run: |
          for image in cilium-ci operator-generic-ci hubble-relay-ci ; do
            until docker manifest inspect quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/$image:${{ needs.check_changes.outputs.sha }} &> /dev/null; do sleep 45s; done
          done

  setup-and-test:
    needs: [check_changes, build-ginkgo-binary]
    uses: ./.github/workflows/conformance-ginkgo-base.yaml
    with:
      k8s-version: ${{ matrix.k8s-version }}
      focus: ${{ matrix.focus }}
      ip-family: ${{ matrix.ip-family }}
      kube-image: ${{ matrix.kube-image }}
      kernel: ${{ matrix.kernel }}
      cliFocus: ${{ matrix.cliFocus }}
      cliSkip: ${{ matrix.cliSkip }}
      sha: ${{ needs.check_changes.outputs.sha }}

    strategy:
      fail-fast: false
      max-parallel: 60
      matrix:
        k8s-version:
          - "1.27"
          - "1.26"
        focus:
          - "f01-agent-chaos"

        include:
          - k8s-version: "1.27"
            ip-family: "dual"
            kube-image: "kindest/node:v1.27.1@sha256:b7d12ed662b873bd8510879c1846e87c7e676a79fefc93e17b2a52989d3ff42b"
            kernel: "bpf-next-20230526.105339@sha256:4133d4e09b1e86ac175df8d899873180281bb4220dc43e2566c47b0241637411"

          - k8s-version: "1.26"
          - ip-family: "dual"
          - kube-image: "kindest/node:v1.26.4@sha256:f4c0d87be03d6bea69f5e5dc0adb678bb498a190ee5c38422bf751541cebe92e"
          - kernel: "4.19-20230526.105339@sha256:cca7436d6c9f08bd218ac12347eb76616ad1a276282806239a93035033b35efe"

          ###
          # K8sAgentChaosTest Connectivity demo application Endpoint can still connect while Cilium is not running
          # K8sAgentChaosTest Restart with long lived connections L3/L4 policies still work while Cilium is restarted
          # K8sAgentChaosTest Restart with long lived connections TCP connection is not dropped when cilium restarts
          - focus: "f01-agent-chaos"
            cliFocus: "K8sAgentChaosTest"

  report-success:
    runs-on: ubuntu-latest
    needs: [check_changes, setup-and-test]
    name: Set commit status to success
    if: ${{ success() }}
    steps:
      - uses: Sibz/github-status-action@650dd1a882a76dbbbc4576fb5974b8d22f29847f # v1.1.6
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ needs.check_changes.outputs.sha }}
          context: ${{ github.workflow }}
          description: Gingko test successful
          state: success
          target_url: ${{ env.check_url }}

  report-failure:
    runs-on: ubuntu-latest
    needs: [check_changes, setup-and-test]
    name: Set commit status to failure
    if: ${{ failure() }}
    steps:
      - uses: Sibz/github-status-action@650dd1a882a76dbbbc4576fb5974b8d22f29847f # v1.1.6
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ needs.check_changes.outputs.sha }}
          context: ${{ github.workflow }}
          description: Gingko test failed
          state: failure
          target_url: ${{ env.check_url }}

  report-cancelled:
    runs-on: ubuntu-latest
    needs: [check_changes, setup-and-test]
    name: Set commit status to cancelled
    if: ${{ cancelled() }}
    steps:
      - uses: Sibz/github-status-action@650dd1a882a76dbbbc4576fb5974b8d22f29847f # v1.1.6
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ needs.check_changes.outputs.sha }}
          context: ${{ github.workflow }}
          description: Gingko test cancelled
          state: error
          target_url: ${{ env.check_url }}
